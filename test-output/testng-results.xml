<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="2" total="7" passed="3">
  <reporter-output>
    <line>
      <![CDATA[<a target="_blank" href="Capture2.JPG">Screenshot Captured</a>]]>
    </line>
    <line>
      <![CDATA[<br><a  target='_blank' href="Capture2.JPG" ><img height=200, width=200, src="Capture2.JPG" alt=""/></img></a>]]>
    </line>
    <line>
      <![CDATA[Screenshot captured]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="115" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
    <groups>
      <group name="high">
        <method signature="OneLoginTest.doLogin()[pri:1, instance:testNgLearning.OneLoginTest@7fad8c79]" name="doLogin" class="testNgLearning.OneLoginTest"/>
        <method signature="TwovalidateButtonTest.validateButton()[pri:0, instance:testNgLearning.TwovalidateButtonTest@27c6e487]" name="validateButton" class="testNgLearning.TwovalidateButtonTest"/>
        <method signature="ThreeTestDependencies.isSkip()[pri:0, instance:testNgLearning.ThreeTestDependencies@646be2c3]" name="isSkip" class="testNgLearning.ThreeTestDependencies"/>
      </group> <!-- high -->
      <group name="low">
        <method signature="OneLoginTest.checkinbox()[pri:3, instance:testNgLearning.OneLoginTest@7fad8c79]" name="checkinbox" class="testNgLearning.OneLoginTest"/>
        <method signature="OneLoginTest.composeEmail()[pri:2, instance:testNgLearning.OneLoginTest@7fad8c79]" name="composeEmail" class="testNgLearning.OneLoginTest"/>
      </group> <!-- low -->
    </groups>
    <test name="LoginTest" duration-ms="47" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
      <class name="testNgLearning.OneLoginTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testNgLearning.OneLoginTest@7fad8c79]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testNgLearning.OneLoginTest@7fad8c79]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNgLearning.OneLoginTest@7fad8c79]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="doLogin()[pri:1, instance:testNgLearning.OneLoginTest@7fad8c79]" name="doLogin" duration-ms="15" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNgLearning.OneLoginTest@7fad8c79]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNgLearning.OneLoginTest@7fad8c79]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNgLearning.OneLoginTest@7fad8c79]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNgLearning.OneLoginTest@7fad8c79]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="composeEmail()[pri:2, instance:testNgLearning.OneLoginTest@7fad8c79]" name="composeEmail" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- composeEmail -->
        <test-method status="PASS" signature="checkinbox()[pri:3, instance:testNgLearning.OneLoginTest@7fad8c79]" name="checkinbox" duration-ms="16" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkinbox -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testNgLearning.OneLoginTest@7fad8c79]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterclass()[pri:0, instance:testNgLearning.OneLoginTest@7fad8c79]" name="afterclass" is-config="true" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNgLearning.OneLoginTest@7fad8c79]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testNgLearning.OneLoginTest -->
    </test> <!-- LoginTest -->
    <test name="ValidateButtonTest" duration-ms="10" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
      <class name="testNgLearning.TwovalidateButtonTest">
        <test-method status="FAIL" signature="validateButton()[pri:0, instance:testNgLearning.TwovalidateButtonTest@27c6e487]" name="validateButton" duration-ms="5" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [ok] but found [submit]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [ok] but found [submit]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at testNgLearning.TwovalidateButtonTest.validateButton(TwovalidateButtonTest.java:23)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a target="_blank" href="Capture2.JPG">Screenshot Captured</a>]]>
            </line>
            <line>
              <![CDATA[<br><a  target='_blank' href="Capture2.JPG" ><img height=200, width=200, src="Capture2.JPG" alt=""/></img></a>]]>
            </line>
            <line>
              <![CDATA[Screenshot captured]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateButton -->
      </class> <!-- testNgLearning.TwovalidateButtonTest -->
    </test> <!-- ValidateButtonTest -->
    <test name="TestDependencies" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
      <class name="testNgLearning.OneLoginTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testNgLearning.OneLoginTest@7fad8c79]" name="beforeSuite" is-config="true" duration-ms="16" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testNgLearning.OneLoginTest@7fad8c79]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testNgLearning.OneLoginTest -->
      <class name="testNgLearning.ThreeTestDependencies">
        <test-method status="SKIP" signature="isSkip()[pri:0, instance:testNgLearning.ThreeTestDependencies@646be2c3]" name="isSkip" duration-ms="0" started-at="2018-07-08T05:10:48Z" finished-at="2018-07-08T05:10:48Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[skipping the method]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: skipping the method
at testNgLearning.ThreeTestDependencies.isSkip(ThreeTestDependencies.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSkip -->
      </class> <!-- testNgLearning.ThreeTestDependencies -->
    </test> <!-- TestDependencies -->
  </suite> <!-- Suite -->
</testng-results>
